open Printf


def pattern_match()
  def fib(n)
    case n when
    |0| 0;
    |1| 1;
    |n| fib(n-2) + fib(n-1)
    end
  end
  printf("%d\n" fib(10))
end
pattern_match()

def parcial_function()

  def fib := {
    |0| 0;
    |1| 1;
    |n| fib(n-2) + fib(n-1)
  }

  printf("fib 10 = %d\n" fib(10))
  
  def fib := do
    |0| 0;
    |1| 1;
    |n| fib(n-2) + fib(n-1)
  end

  printf("fib 10 = %d\n" fib(10))

  def fib
    |0| 0;
    |1| 1;
    |n| fib(n-2) + fib(n-1)
  end

  printf("fib 10 = %d\n" fib(10))

  /* tuple parcual function */
  /*
  llor:= {
    |0,0| a:=1 b:=2; a | b
    |a,b| a | b
  }

  printf("llor %d\n" llor(1,2))
  */
end
parcial_function()
