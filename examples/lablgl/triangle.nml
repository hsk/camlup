/**
 * triangle.nml
 * 
 * original code: https://github.com/wakita/OpenGL.ML/blob/master/chapt03/triangle.ml
 *
 * Demonstrates LablGL triangle fans, backface culling, and depth testing
 *
 */

open M

outline, cull_face, depth_test = 0, 1, 2
flags = [| false; true; false ]

toggle(i) = {
  flags[i] <- ! flags[i]
}

alt_color = {
  pivot = & false
  {|()=>
    pivot := !(*pivot)
    if(*pivot)
      (1.0, 0.0, 0.0)
    else
      (0.0, 1.0, 0.0)
  }
}

menu(#value) = {
  value match {
    | 0 | 1 | 2 -> toggle(value)
  }
  Printf.printf("value = %d (%b)\n%t" value flags[value] flush)
  Glut.postRedisplay()
}

render_scene() = {
  GlClear.clear([`color; `depth])

  set(i capability) = {

    (if (flags[i]) Gl.enable else Gl.disable)(capability)
  }
  set(depth_test `depth_test)
  set(cull_face `cull_face)

  GlDraw.polygon_mode(face=`both; if (flags[outline]) `line else `fill)

  _ = {

    GlMat.push()
    GlMat.rotate3(angle=rot[0] around_xaxis)
    GlMat.rotate3(angle=rot[1] around_yaxis)

    angle = & 0.0
    _ = {
      GlDraw.begins(`triangle_fan)
      GlDraw.vertex3(0.0, 0.0, 75.0)
      while (*angle <= 2.0 *. pi) {
        x = 50.0 *. sin (*angle)
        y = 50.0 *. cos (*angle)
        GlDraw.color(alt_color())
        GlDraw.vertex2(x, y)
        angle := *angle +. pi /. 8.0
      }
      GlDraw.ends()
    }

    angle := 0.0
    _ = {
      GlDraw.begins(`triangle_fan)
      GlDraw.vertex2(0.0, 0.0)
      while (*angle <= 2.0 *. pi) {
        x = 50.0 *. sin(*angle)
        y = 50.0 *. cos(*angle)
        GlDraw.color(alt_color())
        GlDraw.vertex2(x, y)
        angle := *angle +. pi /. 8.0
      }
      GlDraw.ends()
    }

    GlMat.pop()
  }

  Glut.swapBuffers()
}

setup() = {
  GlClear.color(alpha=1.0; (0.0, 0.0, 0.0))
  GlDraw.color(0.0, 1.0, 0.0)
  GlDraw.shade_model(`flat)
  GlDraw.front_face(`cw)
}

_ = {
  Glut.init(Sys.argv)
  Glut.initDisplayMode(double_buffer=true depth=true)
  Glut.createWindow("Triangle Culling Example")

  Glut.createMenu(menu)
  Glut.addMenuEntry("Toggle outline back" 0)
  Glut.addMenuEntry("Toggle cull backface" 1)
  Glut.addMenuEntry("Toggle depth test" 2)
  Glut.attachMenu(Glut.RIGHT_BUTTON)
  
  Glut.reshapeFunc(change_size)
  Glut.specialFunc(special_keys)
  Glut.displayFunc(render_scene)
  setup()
  Glut.mainLoop()
}